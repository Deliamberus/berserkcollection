// <auto-generated />
using System;
using BerserkCollection.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BerserkCollection.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240201115723_AddCardsProperties")]
    partial class AddCardsProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BerserkCollection.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Armor")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Element")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExpAtack")
                        .HasColumnType("int");

                    b.Property<int?>("ExpDef")
                        .HasColumnType("int");

                    b.Property<int?>("ExpShot")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefFly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefMagic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefPoison")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefShot")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefSpell")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefStrike")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefThrow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHorde")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStamina")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTarget")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Rare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Regen")
                        .HasColumnType("int");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
